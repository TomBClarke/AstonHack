package misconstrued.server;

import java.util.ArrayList;
import java.util.List;
import java.util.Set;

import org.java_websocket.WebSocket;
import org.java_websocket.exceptions.WebsocketNotConnectedException;

public class Conversation {
	private List<Member> members;
	
	public Conversation() {
		members = new ArrayList<Member>();
	}
	

	/**
	 * Broadcast a message to all connected clients
	 * @param message
	 */
	private void broadcast(String message) {
		__logger.info("Broadcasting message");
		
		// WS registered
		Set<WebSocket> keySet = connections.keySet();

		// List containing what WS to remove
		List<WebSocket> toRemove = new ArrayList<WebSocket>();
		
		// Loop through and broadcast to all connected
		for (WebSocket ws : keySet) {
			__logger.info("Broadcasting to " + connections.get(ws));
			
			try {				
				ws.send(message);
			} catch (WebsocketNotConnectedException e){
				__logger.warn("WebSocket not connected - adding to remove list");
				toRemove.add(ws);
			}
		}
		
		// Remove all the WS that we needed to
		for (WebSocket ws : toRemove) {
			connections.remove(ws);
		}
	}
}
